{"ast":null,"code":"const endpointBaseURL = 'http://localhost:5000/graphql';\nexport async function loadData() {\n  const response = await fetch(endpointBaseURL, {\n    method: 'POST',\n    headers: {\n      'content-type': 'application/json'\n    },\n    body: JSON.stringify({\n      query: ` {\n                categories\n               }              \n            `\n    })\n  });\n  const responseBody = await response.json();\n  return responseBody.data.categories;\n}\nexport async function loadJoke(cate) {\n  const response = await fetch(endpointBaseURL, {\n    method: 'POST',\n    headers: {\n      'content-type': 'application/json'\n    },\n    body: JSON.stringify({\n      query: ` \n            query JokesQuery($cate: String){\n                categories\n                 jokes(cat:$cate){\n                   value\n                 }\n               }                 \n            `,\n      variables: {\n        cate\n      }\n    })\n  });\n  const responseBody = await response.json();\n  return responseBody.data.categories;\n}","map":{"version":3,"sources":["C:/Users/Siqiniseko Mgazi/Documents/Website practical/SovTech Techinal Assessment/clientside/src/Graphqlservices/requests.js"],"names":["endpointBaseURL","loadData","response","fetch","method","headers","body","JSON","stringify","query","responseBody","json","data","categories","loadJoke","cate","variables"],"mappings":"AAAA,MAAMA,eAAe,GAAC,+BAAtB;AAEA,OAAO,eAAeC,QAAf,GACP;AACC,QAAOC,QAAQ,GAAE,MAAMC,KAAK,CAACH,eAAD,EAAiB;AACtCI,IAAAA,MAAM,EAAE,MAD8B;AAEtCC,IAAAA,OAAO,EAAC;AAAC,sBAAe;AAAhB,KAF8B;AAGtCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,MAAAA,KAAK,EAAE;AACnB;AACA;AACA;AAJ6B,KAAf;AAHgC,GAAjB,CAA5B;AAWG,QAAMC,YAAY,GAAC,MAAMR,QAAQ,CAACS,IAAT,EAAzB;AAEA,SAAOD,YAAY,CAACE,IAAb,CAAkBC,UAAzB;AACH;AACD,OAAO,eAAeC,QAAf,CAAwBC,IAAxB,EACP;AACC,QAAOb,QAAQ,GAAE,MAAMC,KAAK,CAACH,eAAD,EAAiB;AACtCI,IAAAA,MAAM,EAAE,MAD8B;AAEtCC,IAAAA,OAAO,EAAC;AAAC,sBAAe;AAAhB,KAF8B;AAGtCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,MAAAA,KAAK,EAAE;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,aAR6B;AASjBO,MAAAA,SAAS,EAAC;AAACD,QAAAA;AAAD;AATO,KAAf;AAHgC,GAAjB,CAA5B;AAgBG,QAAML,YAAY,GAAC,MAAMR,QAAQ,CAACS,IAAT,EAAzB;AAEA,SAAOD,YAAY,CAACE,IAAb,CAAkBC,UAAzB;AACH","sourcesContent":["const endpointBaseURL='http://localhost:5000/graphql';\r\n\r\nexport async function loadData()\r\n{\r\n const  response= await fetch(endpointBaseURL,{\r\n        method: 'POST',\r\n        headers:{'content-type':'application/json'},\r\n        body: JSON.stringify({\r\n            query:` {\r\n                categories\r\n               }              \r\n            `\r\n        })\r\n    });\r\n\r\n    const responseBody=await response.json();\r\n\r\n    return responseBody.data.categories;\r\n}\r\nexport async function loadJoke(cate)\r\n{\r\n const  response= await fetch(endpointBaseURL,{\r\n        method: 'POST',\r\n        headers:{'content-type':'application/json'},\r\n        body: JSON.stringify({\r\n            query:` \r\n            query JokesQuery($cate: String){\r\n                categories\r\n                 jokes(cat:$cate){\r\n                   value\r\n                 }\r\n               }                 \r\n            `,\r\n            variables:{cate}\r\n        })\r\n    });\r\n\r\n    const responseBody=await response.json();\r\n\r\n    return responseBody.data.categories;\r\n}"]},"metadata":{},"sourceType":"module"}